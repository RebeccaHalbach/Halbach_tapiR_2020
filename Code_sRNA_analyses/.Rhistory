FilePath2 = dir("../../Sonstiges/smallRNAs_pipeline/Lewis2017/GenomeDistribution/new/", "siRNA")
FilessiRNAs=file.path(Dir, FilePath2)
names=c("Aag2", "03_soma_OX", "04_germline_ox", "05_soma_n", "06_germline_n")
names(FilessiRNAs)= names
FilessiRNAs
Dir  = "../../Sonstiges/smallRNAs_pipeline/Lewis2017/GenomeDistribution/new"
FilePath2 = dir("../../Sonstiges/smallRNAs_pipeline/Lewis2017/GenomeDistribution/new/", "siRNA")
FilessiRNAs=file.path(Dir, FilePath2)
names=c("Aag2", "03_soma_OX", "04_germline_ox", "05_soma_n", "06_germline_n")
names(FilessiRNAs)= names
for (i in 1:length(FilessiRNAs)){
x= read_tsv(FilessiRNAs[i], col_names = F) %>%
filter(X1 != grepl("rRNA|tRNA", .$X1))
x= x[!grepl("miRNA", x$X1),]
x= x %>%
add_column(class= addHierachy(.$X1)) %>%
dplyr::select(-X1) %>%
group_by(class) %>%
summarize(fraction= sum(as.numeric(X2))) %>%
mutate(fraction= fraction/ sum(.$fraction))
colnames(x)= c("class", paste(names(FilespiRNAs)[i]))
assign(paste("siRNA", names( FilespiRNAs)[i],  sep="_"), x)
}
piRNAs= left_join(total, piRNA_03_soma_OX) %>%
left_join(piRNA_04_germline_ox) %>%
left_join(piRNA_05_soma_n) %>%
left_join(piRNA_06_germline_n) %>%
left_join(piRNA_Aag2) %>%
gather( sample, fraction, 2:ncol(.))
ggplot(piRNAs, aes(sample, fraction, fill=class)) +
geom_bar(stat="identity") +
mytheme +
myfill
siRNAs= left_join(total, siRNA_03_soma_OX) %>%
left_join(siRNA_04_germline_ox) %>%
left_join(siRNA_05_soma_n) %>%
left_join(siRNA_06_germline_n) %>%
left_join(siRNA_Aag2) %>%
gather( sample, fraction, 2:ncol(.))
ggplot(siRNAs, aes(sample, fraction, fill=class)) +
geom_bar(stat="identity") +
mytheme +
myfill
siRNAs2=siRNAs %>%
add_column(sRNA=rep("siRNA", times=nrow(.))) %>%
filter(sample != "total")
all= piRNAs %>%
add_column(sRNA=rep("piRNA", times=nrow(.))) %>%
rbind(., siRNAs2) %>%
mutate(sRNA= ifelse(sample== "total", "Genome", sRNA)) %>%
mutate(sRNA=factor(sRNA, levels=c("Genome", "siRNA", "piRNA")))
ggplot(all, aes(sample, fraction, fill=class)) + geom_bar(stat="identity") +
theme(axis.line = element_line(),
panel.grid.major = element_line(color="gray97"),
panel.background = element_blank()) +
scale_fill_manual(values=c("gray30", "gray60",
"#A50026", "#D73027", "#F46D43", "#FDAE61",
"#74ADD1", "#4575B4", "#313695",
"gray80")) +
facet_grid(~sRNA, scales="free_x", space="free_x")
sessionInfo()
knitr::opts_chunk$set(echo = TRUE, fig.path='Figs/')
Dir  = "../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New"
FilePath = dir("../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New", "*tapiR1")
Dir  = "../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New"
FilePath = dir("../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New", "*tapiR1")
tapiR1Files=file.path(Dir, FilePath)
names=c("4_Ago3", "1_Piwi4", "2_Piwi5", "3_Piwi6")
names(tapiR1Files)= names
for (i in 1:length(tapiR1Files)){
x= read_tsv(tapiR1Files[i], col_names = TRUE)
y= log2(sum(sum(x$Count_IP)/ sum(x$Count_input)))
assign(paste(names(tapiR1Files)[i], "tapiR1", sep="_"), y)
}
Dir  = "./IPseqJoep/New"
FilePath = dir("./IPseqJoep/New/", "*tapiR2")
tapiR2Files=file.path(Dir, FilePath)
names=c("4_Ago3", "1_Piwi4", "2_Piwi5", "3_Piwi6")
names(tapiR2Files)= names
Dir  = "../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New"
FilePath = dir("../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New/", "*tapiR2")
tapiR2Files=file.path(Dir, FilePath)
names=c("4_Ago3", "1_Piwi4", "2_Piwi5", "3_Piwi6")
names(tapiR2Files)= names
for (i in 1:length(tapiR2Files)){
x= read_tsv(tapiR2Files[i], col_names = TRUE)
y= log2(sum(sum(x$Count_IP)/ sum(x$Count_input)))
assign(paste(names(tapiR2Files)[i], "tapiR2", sep="_"), y)
}
enr= tibble(piRNA= rep(c("tapiR1", "tapiR2"), times=4),
sample=rep(names, each=2),
enrichment=c(`4_Ago3_tapiR1`, `4_Ago3_tapiR2`,
`1_Piwi4_tapiR1`, `1_Piwi4_tapiR2`,
`2_Piwi5_tapiR1`, `2_Piwi5_tapiR2`,
`3_Piwi6_tapiR1`, `3_Piwi6_tapiR2`))
ggplot(enr, aes(sample, enrichment, fill= piRNA, group=piRNA)) +
geom_bar(stat="identity", position = "dodge", color="black") +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.background = element_blank()) +
scale_fill_manual(values=c( "#ABD9E9", "#4575B4")) +ylim(-2.5,5)
Dir  = "./IPseqJoep/New"
FilePath = dir("./IPseqJoep/New", "RDVJ103.enriched")
IPFiles=file.path(Dir, FilePath)
Piw4IP= read_tsv(IPFiles, col_names = TRUE)
Dir  = "../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New"
FilePath = dir("../../Sonstiges/smallRNAs_pipeline/IPseqJoep/New", "RDVJ103.enriched")
IPFiles=file.path(Dir, FilePath)
Piw4IP= read_tsv(IPFiles, col_names = TRUE)
Piwi4IP  = Piw4IP %>% mutate(piRNA=ifelse(Chrom==3 &
(End==41157596 |
End==41158652 |
End==41158499 |
End==41158348 |
End==41158197 |
End==41158047 |
End==41157894 |
End==41157744 |
End==41157449 |
End==41157301 |
End==41157150 |
End==41157002 |
End==41156851 |
End==41156703 |
End==41156553 |
End==41156405 |
End==41156255 |
End==41156105 |
End==41155955 |
End==41155805), "tapiR1",
ifelse(Chrom==3 &
(End==41158739 |
End==41158593 |
End==41158440 |
End==41158289 |
End==41158138 |
End==41157988 |
End==41157835 |
End==41157685 |
End==41157538 |
End==41157390 |
End==41157242 |
End==41157091 |
End==41156943 |
End==41156792 |
End==41156644 |
End==41156494 |
End==41156346 |
End==41156196 |
End==41156046 |
End==41155896 |
End==41155746), "tapiR2", "others"))) %>%
group_by(piRNA) %>%
summarize(mean= mean(Corr_count)) %>%
mutate(mean= mean/sum(mean)) %>%
add_column(IP= rep("Piwi4", 3)) %>%
mutate(piRNA= factor(piRNA, levels=c("tapiR1", "tapiR2", "others")))
ggplot(Piwi4IP, aes(IP, mean, fill=piRNA)) +
geom_bar(stat="identity", color="black") +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.background = element_blank()) +
scale_fill_manual(values=c( "#ABD9E9", "#4575B4", "gray80"))
knitr::opts_chunk$set(echo = TRUE )
library(tidyverse)
library(org.Aaegypti.eg.db)
library(DESeq2)
library(tximport)
library(ggforce)
library(clusterProfiler)
library(latticeExtra)
library(rtracklayer)
library(venneuler)
set.seed(123)
GeneDescription <- select(org.Aaegypti.eg.db,
columns = c("GID", "REFSEQ", "GENENAME", "GENELENGTH"),
keytype = "GID",
keys(org.Aaegypti.eg.db, keytype = "GID")) %>%
mutate(GENELENGTH = as.numeric(GENELENGTH))
#add description from NCBI
#load gtf annotation file which contains description
Dir  <- "/home/rebecca/Dokumente/Rstuff/Genomes/AaegL5"
FilePath <- dir("/home/rebecca/Dokumente/Rstuff/Genomes/AaegL5/", "BASEFEATURES.AaegL5.1.gff3")
GeneIDs <- import(GeneIDs,
format = "gff3")
GeneIDs <-file.path(Dir, FilePath)
GeneIDs <- import(GeneIDs,
format = "gff3")
GeneIDs
TranscriptomeGFF <- import(GeneIDs,
format = "gff3")
FileTranscriptome <-file.path(Dir, FilePath)
TranscriptomeGFF <- import(FileTranscriptome,
format = "gff3")
GeneIDs <- tibble(Name = TranscriptomeGFF$ID,
biotype = TranscriptomeGFF$biotype) %>%
drop_na() %>%
mutate(Name= sub("-.*", "", Name)) %>%
unique()
Dir <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files"
FilePath <- dir("/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files/", "180220")
FilesRNAHybrid <- file.path(Dir, FilePath)
RNAHybridOutput <- read_delim(FilesRNAHybrid, delim = ":",
col_names = FALSE)%>%
dplyr::select(c(2,6))
##there are several genes with different target sites in different isoforms
##Therefore, only consider strongest target site
##(as is has highest chance to be functional and might therefore dominate effect observed on gene level)
RNAHybridOutput <- RNAHybridOutput %>%
mutate(X2=sub("-.*", "", X2)) %>%
group_by(X2) %>%
summarise(mfe=min(X6))
GeneIDs <- tibble(Name = TranscriptomeGFF$ID,
biotype = TranscriptomeGFF$biotype) %>%
drop_na() %>%
mutate(Name= sub("-.*", "", Name)) %>%
unique()
GeneAnnotation <- GeneDescription %>%
left_join(GeneIDs, by= c("GID"="Name")) %>%
filter(biotype != "nontranslating_CDS")
Dir <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files"
FilePath <- dir("/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files/", "180220")
FilesRNAHybrid <- file.path(Dir, FilePath)
RNAHybridOutput <- read_delim(FilesRNAHybrid, delim = ":",
col_names = FALSE)%>%
dplyr::select(c(2,6))
##there are several genes with different target sites in different isoforms
##Therefore, only consider strongest target site
##(as is has highest chance to be functional and might therefore dominate effect observed on gene level)
RNAHybridOutput <- RNAHybridOutput %>%
mutate(X2=sub("-.*", "", X2)) %>%
group_by(X2) %>%
summarise(mfe=min(X6))
Dir <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files"
FilePath <- dir(Dir, "180220")
FilePath
FilesRNAHybrid <- file.path(Dir, FilePath)
FilesRNAHybrid
Dir <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files"
FilePath <- dir(Dir, "180220")
FilesRNAHybrid <- file.path(Dir, FilePath)
RNAHybridOutput <- read_delim(FilesRNAHybrid, delim = ":",
col_names = FALSE)%>%
dplyr::select(c(2,6))
##there are several genes with different target sites in different isoforms
##Therefore, only consider strongest target site
##(as is has highest chance to be functional and might therefore dominate effect observed on gene level)
RNAHybridOutput <- RNAHybridOutput %>%
mutate(X2=sub("-.*", "", X2)) %>%
group_by(X2) %>%
summarise(mfe=min(X6))
DirAnnotationData <- "/home/rebecca/Dokumente/Rstuff/Genomes/AaegL5"
GeneDescription <- select(org.Aaegypti.eg.db,
columns = c("GID", "REFSEQ", "GENENAME", "GENELENGTH"),
keytype = "GID",
keys(org.Aaegypti.eg.db, keytype = "GID")) %>%
mutate(GENELENGTH = as.numeric(GENELENGTH))
#add description from NCBI
#load gtf annotation file which contains description
FilePath <- dir( DirAnnotationData, "BASEFEATURES.AaegL5.1.gff3")
FileTranscriptome <-file.path(DirAnnotationData, FilePath)
TranscriptomeGFF <- import(FileTranscriptome,
format = "gff3")
GeneIDs <- tibble(Name = TranscriptomeGFF$ID,
biotype = TranscriptomeGFF$biotype) %>%
drop_na() %>%
mutate(Name= sub("-.*", "", Name)) %>%
unique()
#combine with Vector base annotation
GeneAnnotation <- GeneDescription %>%
left_join(GeneIDs, by= c("GID"="Name")) %>%
filter(biotype != "nontranslating_CDS")
DirRawData <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files"
FilePath <- dir(DirRawData, "180220")
FilesRNAHybrid <- file.path(DirRawData, FilePath)
RNAHybridOutput <- read_delim(FilesRNAHybrid, delim = ":",
col_names = FALSE)%>%
dplyr::select(c(2,6))
##there are several genes with different target sites in different isoforms
##Therefore, only consider strongest target site
##(as is has highest chance to be functional and might therefore dominate effect observed on gene level)
RNAHybridOutput <- RNAHybridOutput %>%
mutate(X2=sub("-.*", "", X2)) %>%
group_by(X2) %>%
summarise(mfe=min(X6))
Dir <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Trancriptome/"
FilePath <- dir("/home/rebecca/Dokumente/Rstuff/flippi_antipi/Trancriptome/", "TEfam_list")
TEs <- file.path(Dir, FilePath)
TEs <- read_tsv(TEs) %>%
unite(TE_name, 1:2, sep = "|")
#Gene vs Transcript matrix
Matrix_TEs <- tibble(Transcript_ID = TEs$TE_name,
Gene_ID = TEs$TE_name)
DirRawDataAag2Cells <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/STAR_on_AaegL5/20190425_Aag2cells"
FilePath <- dir(DirRawDataAag2Cells, "ReadsPerGene.out.tab")
FilesAag2 <- file.path(DirRawDataAag2Cells, FilePath)
SampleNames <- c("antiControl_1", "antiControl_2", "antiControl_3", "antitapiR_1", "antitapiR_2", "antitapiR_3")
names(FilesAag2) <- paste0(SampleNames)
countMatrixAag2 <- read_delim(FilesAag2[1],
delim ="\t",
col_names=FALSE) %>%
dplyr::select(gene = X1) %>%
dplyr::slice(5:n())
#import count tables from STAR
for (i in 1: length(FilesAag2)){
x <- read_delim(FilesAag2[i],
delim = "\t",
col_names = FALSE) %>%
dplyr::select(c(1,4)) %>%
dplyr::slice(5:n())
colnames(x) <- c("gene", names(FilesAag2)[i])
countMatrixAag2 <- left_join(countMatrixAag2, x, by= "gene")
}
countMatrixAag2 <- countMatrixAag2 %>%
na.omit %>%
as.data.frame
rownames(countMatrixAag2) <- countMatrixAag2$gene
countMatrixAag2 <- as.matrix(countMatrixAag2[, 2:7])
View(countMatrixAag2)
FilePath <- dir(DirRawDataAag2Cells, "ReadsPerGene.out.tab")
FilesAag2 <- file.path(DirRawDataAag2Cells, FilePath)
SampleNames <- c("controlAO_1", "controlAO_2", "controlAO_3", "tapiR1AO_1", "tapiR1AO_2", "tapiR1AO_3")
names(FilesAag2) <- paste0(SampleNames)
countMatrixAag2 <- read_delim(FilesAag2[1],
delim ="\t",
col_names=FALSE) %>%
dplyr::select(gene = X1) %>%
dplyr::slice(5:n())
#import count tables from STAR
for (i in 1: length(FilesAag2)){
x <- read_delim(FilesAag2[i],
delim = "\t",
col_names = FALSE) %>%
dplyr::select(c(1,4)) %>%
dplyr::slice(5:n())
colnames(x) <- c("gene", names(FilesAag2)[i])
countMatrixAag2 <- left_join(countMatrixAag2, x, by= "gene")
}
countMatrixAag2 <- countMatrixAag2 %>%
na.omit %>%
as.data.frame
rownames(countMatrixAag2) <- countMatrixAag2$gene
countMatrixAag2 <- as.matrix(countMatrixAag2[, 2:7])
View(countMatrixAag2)
valueDESeqAlpha <- 0.01
valueDEseqLcfThreshold <- 0.5
valueDEseqLfcThreshold <- 0.5
rm(valueDEseqLcfThreshold)
lucassay_positive <- c("AAEL022223",
"AAEL001555",
"AAEL023448",
"AAEL026349",
"AAEL021117",
"AAEL023667",
"AAEL026626",
"AAEL008511",
"AAEL019943")
lucassay_negative <- c("AAEL019724",
"AAEL003434",
"AAEL010190",
"AAEL010232",
"AAEL002666",
"AAEL009585",
"AAEL025784",
"AAEL19707",
"AAEL025586",
"AAEL021753")
mytheme <- theme(legend.title = element_blank(),
legend.text = element_text(40),
panel.background = element_blank(),
axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key = element_blank())
myplot <- list(scale_x_continuous(trans="log2", limits=c(1,NA)),
scale_y_continuous(trans="log2", limits=c(1,NA)),
geom_abline(slope = 1, intercept = 0),
geom_abline(slope = 1, intercept= 1),
geom_abline(slope = 1, intercept= -1))
filePath <- dir(dirRawDataAag2Cells, "ReadsPerGene.out.tab")
dirAnnotationData <- "/home/rebecca/Dokumente/Rstuff/Genomes/AaegL5"
dirRawData <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/Additional_files"
dirRawDataAag2Cells <- "/home/rebecca/Dokumente/Rstuff/flippi_antipi/STAR_on_AaegL5/20190425_Aag2cells"
valueDESeqAlpha <- 0.01
valueDEseqLfcThreshold <- 0.5
filePath <- dir(dirRawDataAag2Cells, "ReadsPerGene.out.tab")
filesAag2 <- file.path(dirRawDataAag2Cells, filePath)
SampleNames <- c("controlAO_1", "controlAO_2", "controlAO_3", "tapiR1AO_1", "tapiR1AO_2", "tapiR1AO_3")
names(filesAag2) <- paste0(SampleNames)
countMatrixAag2 <- read_delim(filesAag2[1],
delim ="\t",
col_names=FALSE) %>%
dplyr::select(gene = X1) %>%
dplyr::slice(5:n())
#import count tables from STAR
for (i in 1: length(filesAag2)){
x <- read_delim(filesAag2[i],
delim = "\t",
col_names = FALSE) %>%
dplyr::select(c(1,4)) %>%
dplyr::slice(5:n())
colnames(x) <- c("gene", names(filesAag2)[i])
countMatrixAag2 <- left_join(countMatrixAag2, x, by= "gene")
}
countMatrixAag2 <- countMatrixAag2 %>%
na.omit %>%
as.data.frame
rownames(countMatrixAag2) <- countMatrixAag2$gene
countMatrixAag2 <- as.matrix(countMatrixAag2[, 2:7])
sampleTableAag2 <- data.frame(condition= factor(rep(c("Control", "tapiR1AO"), each=3),
levels=c("Control", "tapiR1AO")))
rownames(sampleTableAag2) <- colnames(countMatrixAag2)
#create DESeq object
ddsAag2 <- DESeqDataSetFromMatrix(countData = countMatrixAag2,
colData = sampleTableAag2,
design = ~condition)
#PCA plot to check groups
rld <- rlog(ddsAag2,
blind= TRUE)
plotPCA(rld)
#Filter low counts
ddsAag2 <- ddsAag2[rowSums(counts(ddsAag2))>1,]
DEseqAag2 <- DESeq(ddsAag2, quiet = TRUE)
DEseqAag2 <- DESeq(ddsAag2, quiet = TRUE)
#check size factors of libraries for normalization (used for normalization genome browser tracks)
sizeFactors(DEseqAag2)
resultsDEseqAag2 <- results(DEseqAag2,
alpha= valueDESeqAlpha,
lfcThreshold = valueDEseqLfcThreshold)
summary(resultsDEseqAag2)
resultsDEseqAag2 <- resultsDEseqAag2 %>%
as.data.frame() %>%
rownames_to_column(var= "geneID") %>%
as_tibble()
resultsDEseqAag2 <- left_join(resultsDEseqAag2,
geneAnnotation,
by=c("geneID"="GID")) %>%
arrange(.,desc(log2FoldChange))%>%
add_column(biotype_sign= ifelse(.$padj<=0.01, .$biotype, "not_significant")) %>%
replace_na(list(biotype_sign ="not_significant"))
geneAnnotation<- GeneAnnotation
resultsDEseqAag2 <- left_join(resultsDEseqAag2,
geneAnnotation,
by=c("geneID"="GID")) %>%
arrange(.,desc(log2FoldChange))%>%
add_column(biotype_sign= ifelse(.$padj<=0.01, .$biotype, "not_significant")) %>%
replace_na(list(biotype_sign ="not_significant"))
write_tsv(resultsDEseqAag2[, c(1, 8, 2:7, 9, 11)], "DE_Genes_Aag2.tsv")
counts_Aag2 <- counts(DEseqAag2,
normalized=TRUE,
replaced=FALSE) %>%
as.data.frame() %>%
rownames_to_column() %>%
as_tibble %>%
group_by(rowname) %>%
summarize(meanControl= mean(controlAO_1:controlAO_3),
meantapiR= mean(tapiR1AO_1:tapiR1AO_3)) %>%
mutate(meanControl= meanControl + 1,
meantapiR= meantapiR + 1) %>%  #add pseudo-count of 1 in order to plot logarithmic
left_join(resultsDEseqAag2[,c("geneID", "biotype_sign")], by=c("rowname"="geneID"))
ggplot() +
geom_point(data=counts_Aag2[counts_Aag2$biotype_sign=="not_significant",],
aes(meanControl, meantapiR, color=biotype_sign)) +
geom_point(data=counts_Aag2[counts_Aag2$biotype_sign=="protein_coding",],
aes(meanControl, meantapiR, color=biotype_sign)) +
geom_point(data=counts_Aag2[counts_Aag2$biotype_sign=="lncRNA",],
aes(meanControl, meantapiR, color=biotype_sign)) +
geom_point(data=counts_Aag2[counts_Aag2$biotype_sign=="pseudogene",],
aes(meanControl, meantapiR, color=biotype_sign)) +
scale_color_manual(values=c('#A50026', '#CCCCCC', '#74ADD1')) +
myplot +
mytheme
#add RNAhybrid
resultsDEseqAag2 <- resultsDEseqAag2 %>%
left_join(RNAHybridOutput, by = c("geneID"="X2"))
ggplot() +
geom_point(data= resultsDEseqAag2[resultsDEseqAag2$mfe < 0,],
aes(x=log2FoldChange, y=mfe),
alpha=0.25) +
geom_point(data= resultsDEseqAag2[resultsDEseqAag2$geneID %in%lucassay_negative,],
aes(x=log2FoldChange, y=mfe),
color="#D73027",  #red
size=2.5) +
geom_point(data= resultsDEseqAag2[resultsDEseqAag2$geneID %in%lucassay_positive,],
aes(x=log2FoldChange, y=mfe),
color="#313695",   #blue
size=2.5) +
xlim(-6,10.5) +
mytheme
ggplot(resultsDEseqAag2, aes( mfe==0, log2FoldChange, fill= mfe==0))+
geom_violin(show.legend = F) +
scale_fill_manual(values= c("#313695", "#A50026")) +
mytheme +
ylim(-6,10.5)
genes <- resultsDEseqAag2 %>%
filter(biotype != "lncRNA") %>%         #filter out lncRNAs as these cannot have an associated GO term
dplyr::select(geneID, log2FoldChange, padj, mfe) %>%
replace_na(list(padj= 1))
View(genes)
resultsCodingGenes <- resultsDEseqAag2 %>%
filter(biotype != "lncRNA") %>%         #filter out lncRNAs as these cannot have an associated GO term
dplyr::select(geneID, log2FoldChange, padj, mfe) %>%
replace_na(list(padj= 1))
geneList <- resultsCodingGenes$log2FoldChange
names(geneList) <- resultsCodingGenes$geneID
GOResultsAag2 <- gseGO(geneList = geneList,
OrgDb = org.Aaegypti.eg.db,
ont = "ALL",
keyType = "GID",
pvalueCutoff = 0.05)
head(GOResultsAag2, 15)
pvalueGO <- 0.05
